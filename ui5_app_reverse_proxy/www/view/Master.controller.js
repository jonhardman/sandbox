jQuery.sap.require("linklaters.com.customexpensesapp.util.Formatter");jQuery.sap.require("linklaters.com.customexpensesapp.util.Controller");linklaters.com.customexpensesapp.util.Controller.extend("linklaters.com.customexpensesapp.view.Master", {	onInit : function() {		masterController = this;sap.ui.core.UIComponent.getRouterFor(this).attachRouteMatched(this.onRouteMatched, this);},onRouteMatched : function(oEvent) {	this.getView().bindElement("/Me");},onListUpdateFinished: function(oEvent) {		if (oEvent.getParameters().actual === 0) {		    this.emptyExpense = true;			this.createDefaultExpense();		} else{		     this.emptyExpense = false;		}	},	createDefaultExpense : function(){	    var oDate = new Date();	    	    var oPayload = {				"ExpenseYear": oDate.getFullYear().toString(),				"ExpenseMonth": (oDate.getMonth() + 1).toString(),				"TotalAmount": "0.000",				"Currency": "GBP",				"LastModified": "\\/Date(" + oDate.getTime() + ")\\/",				"Status": "New"		};	    this.getView().getModel().create("/MyExpenseSet", oPayload, {				success: function(oResponse) {					sap.m.MessageToast.show("No Expense Request found. Created a default for the current period.", {    			duration: 2000    		});				},				error: function(oError) {					alert("Error");				}			});	},	onSelect : function(oEvent) {	if (typeof(detailController) === "undefined") {			//Load the detail view in desktop			this.getRouter().myNavToWithoutHash({				currentView: this.getView(),				targetViewName: "linklaters.com.customexpensesapp.view.Detail",				targetViewType: "XML"			});		} else {			if (detailController !== null && detailController) {				detailController.getView().setBusy(true);			}		}this.showDetail(oEvent.getParameter("listItem") || oEvent.getSource());	},showDetail : function(oItem) {		// If we're on a phone, include nav in history; if not, don't.		var bReplace = jQuery.device.is.phone ? false : true;			var sEmployeeNumber = oItem.getBindingContext().getProperty("EmployeeNumber");		var sExpenseYear = oItem.getBindingContext().getProperty("ExpenseYear");		var sExpenseMonth = oItem.getBindingContext().getProperty("ExpenseMonth");		this.getRouter().navTo("expenseDetail", {			employeeNumber: sEmployeeNumber,			expenseYear: sExpenseYear,			expenseMonth: sExpenseMonth,			tab: this.sTab || "expenseItems"		}, bReplace);	}});