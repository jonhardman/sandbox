jQuery.sap.declare("linklaters.com.customexpensesapp.Component");jQuery.sap.require("linklaters.com.customexpensesapp.MyRouter");sap.ui.core.UIComponent.extend("linklaters.com.customexpensesapp.Component", {	metadata : {		name : "customexpensesapp Demo App",		version : "1.0",		includes : [],		dependencies : {			libs : ["sap.m", "sap.ui.layout"],			components : []		},    rootView : "linklaters.com.customexpensesapp.view.App",        	config : {    		    resourceBundle : "i18n/messageBundle.properties",    		    serviceConfig : {    			name : "My_Expenses",    			serviceUrl : "/sap/opu/odata" + "/CITEXP/EXPENSES_SRV/"    		}    },    routing : {    			config : {    				routerClass : linklaters.com.customexpensesapp.MyRouter,    				viewType : "XML",    				viewPath : "linklaters.com.customexpensesapp.view",    				targetAggregation : "detailPages",    				clearTarget : false    			},    			routes : [    				{    				pattern : "",    				name : "main",    				view : "Master",    				targetAggregation : "masterPages",    				targetControl : "idAppControl",    				subroutes : [    					{    					pattern : "expenseDetail/{employeeNumber}/{expenseYear}/{expenseMonth}/:tab:",    						name : "expenseDetail",    						view : "Detail"    					},    					{    					pattern : "expenseItem/{employeeNumber}/{expenseYear}/{expenseMonth}/tab",    						name : "expenseItem",    						view : "AddExpenseItem"    					}    				]    			}    			]    		}    },init : function() {		sap.ui.core.UIComponent.prototype.init.apply(this, arguments);		var mConfig = this.getMetadata().getConfig();		// always use absolute paths relative to our own component		// (relative paths will fail if running in the Fiori Launchpad)		var oRootPath = jQuery.sap.getModulePath("linklaters.com.customexpensesapp");		// set i18n model		var i18nModel = new sap.ui.model.resource.ResourceModel({			bundleUrl : [oRootPath, mConfig.resourceBundle].join("/")		});		this.setModel(i18nModel, "i18n");		var sServiceUrl = mConfig.serviceConfig.serviceUrl;		// Create and set domain model to the component		var oModel = new sap.ui.model.odata.ODataModel(sServiceUrl, true);		this.setModel(oModel);		// set device model		var oDeviceModel = new sap.ui.model.json.JSONModel({			isTouch : sap.ui.Device.support.touch,			isNoTouch : !sap.ui.Device.support.touch,			isPhone : sap.ui.Device.system.phone,			isNoPhone : !sap.ui.Device.system.phone,			listMode : sap.ui.Device.system.phone ? "None" : "SingleSelectMaster",			listItemType : sap.ui.Device.system.phone ? "Active" : "Inactive"		});		oDeviceModel.setDefaultBindingMode("OneWay");		this.setModel(oDeviceModel, "device");		this.getRouter().initialize();	}});